import{_ as s,o as a,c as n,a as e}from"./app.69c535c4.js";const A=JSON.parse('{"title":"Nuxtjs (v3)","description":"","frontmatter":{},"headers":[{"level":2,"title":"echarts","slug":"echarts","link":"#echarts","children":[{"level":3,"title":"Instance","slug":"instance","link":"#instance","children":[]}]},{"level":2,"title":"Errors","slug":"errors","link":"#errors","children":[{"level":3,"title":"nuxt3 To load an ES module, set \\"type\\": \\"module\\" in the package.json or use the .mjs extension.","slug":"nuxt3-to-load-an-es-module-set-type-module-in-the-package-json-or-use-the-mjs-extension","link":"#nuxt3-to-load-an-es-module-set-type-module-in-the-package-json-or-use-the-mjs-extension","children":[]}]}],"relativePath":"blog/nuxt3.md","lastUpdated":1659243424000}'),o={name:"blog/nuxt3.md"},l=e(`<h1 id="nuxtjs-v3" tabindex="-1">Nuxtjs (v3) <a class="header-anchor" href="#nuxtjs-v3" aria-hidden="true">#</a></h1><h2 id="echarts" tabindex="-1">echarts <a class="header-anchor" href="#echarts" aria-hidden="true">#</a></h2><h3 id="instance" tabindex="-1">Instance <a class="header-anchor" href="#instance" aria-hidden="true">#</a></h3><p>\u4FDD\u5B58 echarts \u5B9E\u4F8B\u65F6\uFF0C\u4F7F\u7528 <code>shallowRef</code> \u6216 \u76F4\u63A5\u58F0\u660E\uFF0C\u4E0D\u8981\u4F7F\u7528 <code>ref</code> \u6216 <code>reactive</code> \u8FDB\u884C\u4FDD\u5B58\u3002</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre><code><span class="line"><span style="color:#676E95;">// \u2705</span></span>
<span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> chart</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> chart </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">shallowRef</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;">// \u274E</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> chart </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">ref</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> chart </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">reactive</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"></span></code></pre></div><h2 id="errors" tabindex="-1">Errors <a class="header-anchor" href="#errors" aria-hidden="true">#</a></h2><h3 id="nuxt3-to-load-an-es-module-set-type-module-in-the-package-json-or-use-the-mjs-extension" tabindex="-1"><code>nuxt3 To load an ES module, set &quot;type&quot;: &quot;module&quot; in the package.json or use the .mjs extension.</code> <a class="header-anchor" href="#nuxt3-to-load-an-es-module-set-type-module-in-the-package-json-or-use-the-mjs-extension" aria-hidden="true">#</a></h3><p>\u67D0\u4E2A\u5E93\u6CA1\u6709\u6B63\u786E\u5F15\u5165 mjs\uFF0C\u9700\u8981\u5728 <code>nuxt.config.ts</code> \u4E2D\u914D\u7F6E <code>alias</code>\u3002</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> alias</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Record</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{}</span></span>
<span class="line"><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> (process</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">env</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">NODE_ENV </span><span style="color:#89DDFF;">===</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">development</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">alias</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">ethers</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">ethers/lib/index</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">defineNuxtConfig</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  alias</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div>`,9),t=[l];function p(c,r,i,d,y,D){return a(),n("div",null,t)}const F=s(o,[["render",p]]);export{A as __pageData,F as default};
